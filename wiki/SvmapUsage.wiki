#summary How to use svmap.
#labels Featured

= Svmap usage =

Svmap is a free scanner for auditing of sip devices and PBX servers. The tool is flexible enough to allow you to scan ranges of ip addresses as well as ranges of ports for SIP. It accepts comma delimited files, and can output to comma delimited files as well. Can be used to launch different types of scans, including ones that set

{{{
usage: svmap.py [options]

options:
  --version             show version and license
  -h, --help            show this help message and exit
  -o output.csv, --output=output.csv
                        Output results to a specified csv file
  -i input.csv, --input=input.csv
                        Input csv based on previous results
  -p PORT, --port=PORT  Destination port or port ranges of the SIP device - eg
                        -p5060,5061,8000-8100
  -P PORT, --localport=PORT
                        Source port for our packets
  -t SELECTTIME, --timeout=SELECTTIME
                        Timeout for the select() function. Change this if
                        you're losing packets
  -c, --enablecompact   enable compact mode. Makes packets smaller but
                        possibly less compatable
  -m METHOD, --method=METHOD
                        Specify the request method - by default this is
                        OPTIONS.
}}}

= Target IP addresses =

To specify a range of IP address, one can make use of the CIDR notation. For example to scan the 1.1.1.0 subnet one would run the following command:
{{{
./svmap 1.1.1.1/24
}}}

You can also specify a name instead of an IP address:
{{{
./svmap sipvicious.org
}}}

.. and also use CIDR notation with the name:
{{{
./svmap sipvicious.org/24
}}}

Another way of specifying a custom range is to make use of <->, for example:
{{{
./svmap "1.1.1.50<->1.1.160"
}}}

= Options =

== Output ==
The purpose of having an output file to csv format is to be able to import the results in spreadsheet and database applications with ease. A security administrator or penetration tester might want to present results in graphs.

This also serves the purpose of being compatible with the input option.

== Input ==
The input option accepts csv files with the same format as the output option. It serves the purpose of being able to scan specific devices on specific ports. This allows security testers to scan the same devices at different times using different methods. 

One particular usage example is to scan for SIP devices using default options. Then at a given time scan for the SIP devices found in the previous scan using the INVITE method, which can get all the scanned devices to ring at the same time. 

== Destination port ==
By default, most SIP devices listen on the udp port 5060. However some SIP phones might listen on a high port. For example, X-lite is known to listen on "random" high ports. In that case, you can use ranges of ports to find out the port on which the SIP device is listening on. 

== Source port ==
By default, svmap listens on udp port 5060. However there are times when that port is already taken and svmap cannot bind on the default port. In that case, one can make use of the -P option to specify another udp port to bind to. 

== Timeout or Select time ==
This option allows you to specify the timeout for the select() function. If the network is slow, then it is recommended that you set this to something higher than the default. The default is 0.005. Try with 0.01 first, and start increasing. 

== Compact mode ==
SIP supports compact mode, where some headers can be written in short form. By default this is disabled because some devices might not support it. 

== Method ==
By default, svmap uses the OPTIONS method. However some devices might not support this method (even though they should). You may specify a different method to scan with, such as REGISTER and INVITE. Note that INVITE can be noisy and generate a "ring" at the other end.  For a list of method consult with the relevant RFCs or the [http://en.wikipedia.org/wiki/SIP_Requests wikipedia page].


= Examples =

Scan a subnet:
{{{
./svmap 10.0.0.1/24
}}}

Scan a subnet running compact mode on port range 1024-2080:
{{{
./svmap 10.0.0.1/24 -p1024-2080 -c
}}}

Scan a subnet and log the results to a csv file:
{{{
./svmap -o scan.csv 10.0.0.1/24
}}}

Scan a list of previously scanned hosts and make use of the INVITE method:
{{{
./svmap -i scan.csv -m INVITE
}}}
